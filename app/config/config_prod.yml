imports:
    - { resource: config.yml }

#doctrine:
#    orm:
#        metadata_cache_driver: apc
#        result_cache_driver: apc
#        query_cache_driver: apc

monolog:
    handlers:
        main:
            type: fingers_crossed
            action_level: error
            handler: nested
        nested:
            type: stream
            path: '%kernel.logs_dir%/%kernel.environment%.log'
            level: debug
        console:
            type: console

easy_admin:
    design:
        menu:
            - { label: 'Messenger', url: '/messages', icon: 'users' }
            - { entity: 'User', label: 'Users', icon: 'users' }
            - { entity: 'Lecture', label: 'Lectures', icon: 'book', default: true }
            - { entity: 'Homework', label: 'Homework', icon: 'laptop' }
            - { entity: 'News', label: 'News', icon: 'bullhorn' }
    entities:
        User:
            controller: AppBundle\Controller\Admin\UserController
            class: AppBundle\Entity\User
            form:
                fields:
                    - username
                    - name
                    - { property: 'email', type: 'email', label: 'Email' }
                    - enabled
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_LECTOR': 'ROLE_LECTOR', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }
            edit:
                form_options: { validation_groups: ['Default'] }
            new:
                form_options: { validation_groups: ['Default', 'registration'] }
                fields:
                    # if administrators are allowed to edit users' passwords and roles, add this:
                    - { property: 'plainPassword', label: 'Password', type: 'password', type_options: { required: true } }
                    - { property: 'confirmPassword', label: 'Confirm password', type: 'password', type_options: { required: false } }
            list:
                actions: ['show']
                fields:
                    - name
                    - email
                    - roles
            show:
                fields:
                    - username
                    - name
                    - email
                    - enabled
                    - roles
        News:
            controller: AppBundle\Controller\Admin\NewsController
            class: AppBundle\Entity\News
            access_role: ROLE_LECTOR
            form:
                fields:
                    - title
                    - description
                    - date
                    - author
            edit:
                form_options: { validation_groups: ['Default'] }
            new:
                form_options: { validation_groups: ['registration'] }
            list:
                actions: ['show']
                sort: [ 'date', 'ASC' ]
                fields:
                    - title
                    - date
                    - author
            show:
                fields:
                    - title
                    - description
                    - date
                    - author
